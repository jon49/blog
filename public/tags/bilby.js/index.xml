<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Bilby.Js on JNyman.com</title>
    <link>http://jnyman.com/tags/bilby.js/</link>
    <description>Recent content in Bilby.Js on JNyman.com</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 01 Jul 2014 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://jnyman.com/tags/bilby.js/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>bilby.js &amp; lenses</title>
      <link>http://jnyman.com/2014/07/01/bilbyjs_lenses/</link>
      <pubDate>Tue, 01 Jul 2014 00:00:00 +0000</pubDate>
      
      <guid>http://jnyman.com/2014/07/01/bilbyjs_lenses/</guid>
      <description>In JavaScript nearly everything is mutable. This can cause problems in your code when you think you have a new object or variable but instead you are operating on the referenced object. So, we create patterns to alleviate this problem. Or we use libraries like underscore.js or lodash.js which incorporate the functional concepts. Unfortunately they don&amp;rsquo;t always use immutable objects either.
Bilby.js solves the mutability problem by using lenses. Using the lenses pattern one can access and change one&amp;rsquo;s objects in a safe and immutable manner.</description>
    </item>
    
    <item>
      <title>bilby.js &amp; functional programming</title>
      <link>http://jnyman.com/2014/05/13/bilby_functional_programming/</link>
      <pubDate>Tue, 13 May 2014 00:00:00 +0000</pubDate>
      
      <guid>http://jnyman.com/2014/05/13/bilby_functional_programming/</guid>
      <description>I&amp;rsquo;ve been learning functional programming for quite some time and like the programming paradigm. But, it can be difficult sometimes. Some libraries like lodash.js can be easy to start learning, but others like bilby.js require that you understand more of the functional approach. So, here are some videos that have helped me understand bilby.js better.
This one gives a quick overview. Note that Maybe (Haskell) is similar to Option (Scala)</description>
    </item>
    
  </channel>
</rss>