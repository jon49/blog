<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Immutability on JNyman.com</title>
    <link>https://jnyman.com/tags/immutability/</link>
    <description>Recent content in Immutability on JNyman.com</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 01 Jul 2014 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://jnyman.com/tags/immutability/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>bilby.js &amp; lenses</title>
      <link>https://jnyman.com/2014/07/01/bilbyjs_lenses/</link>
      <pubDate>Tue, 01 Jul 2014 00:00:00 +0000</pubDate>
      
      <guid>https://jnyman.com/2014/07/01/bilbyjs_lenses/</guid>
      <description>In JavaScript nearly everything is mutable. This can cause problems in your code when you think you have a new object or variable but instead you are operating on the referenced object. So, we create patterns to alleviate this problem. Or we use libraries like underscore.js or lodash.js which incorporate the functional concepts. Unfortunately they don&amp;rsquo;t always use immutable objects either.
Bilby.js solves the mutability problem by using lenses. Using the lenses pattern one can access and change one&amp;rsquo;s objects in a safe and immutable manner.</description>
    </item>
    
    <item>
      <title>Functional Immutability in JavaScript</title>
      <link>https://jnyman.com/2014/05/29/functional_immutability_in_javascript/</link>
      <pubDate>Thu, 29 May 2014 00:00:00 +0000</pubDate>
      
      <guid>https://jnyman.com/2014/05/29/functional_immutability_in_javascript/</guid>
      <description>This is taken from Michael Fogus&amp;rsquo; book Functional JavaScript in the chapter Purity, Immutability, and Policies for Change.
Immutability is impossible to achieve in JavaScript without using Object.freeze but it only performs makes the object immutable shallowing, you have to roll your own deepFreeze if you would like to make the object truly immutable.
So there are some practices you can do to make your functions and variables perform in a more immutable manner.</description>
    </item>
    
  </channel>
</rss>