<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>History on JNyman.com</title>
    <link>https://jnyman.com/tags/history/</link>
    <description>Recent content in History on JNyman.com</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 13 Jun 2016 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://jnyman.com/tags/history/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>On-the-Fly Lambda Expressions in JavaScript</title>
      <link>https://jnyman.com/2016/06/13/lambda_expressions_in_javascript/</link>
      <pubDate>Mon, 13 Jun 2016 00:00:00 +0000</pubDate>
      
      <guid>https://jnyman.com/2016/06/13/lambda_expressions_in_javascript/</guid>
      <description>Before many of the JavaScript compilers became real popular and if you wanted to write in straight JavaScript you could create functions on the fly. This was really nice for doing lambda functions.
Here&amp;rsquo;s a couple libraries that did this.
https://github.com/fschaefer/Lambda.js https://github.com/dfellis/lambda-js
Here&amp;rsquo;s how it basically worked:
var f = function(func){ var funcArray = func.split(&#39;-&amp;gt;&#39;) return (funcArray.length === 1) ? new Function(&#39;x&#39;, &#39;return (&#39; + funcArray[0].trim() + &#39;)&#39;) : new Function(funcArray[0].</description>
    </item>
    
  </channel>
</rss>